---
# tasks file for sssd_ad

- name: Gather os specific variables
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags: vars

- name: Ensure required packages are installed
  ansible.builtin.package:
    name: "{{ sssd_ad_packages }}"
    state: present
  notify:
    - update pam

- name: Manage Kerberos configuration
  ansible.builtin.template:
    src: "krb5.conf.j2"
    dest: "/etc/krb5.conf"
    mode: "0644"
    owner: root
    group: root

- name: Manage SSSD configuration
  ansible.builtin.template:
    src: "sssd.conf.j2"
    dest: "/etc/sssd/sssd.conf"
    mode: "0600"
    owner: root
    group: root
  notify:
    - restart sssd

- name: Fix hosts line in /etc/nsswitch.conf
  ansible.builtin.lineinfile:
    path: /etc/nsswitch.conf
    regexp: '^hosts:'
    line: 'hosts: files dns'
  when:
    - ansible_os_family == 'Debian'

- name: PAM mkhomedir configuration
  ansible.builtin.template:
    src: mkhomedir.j2
    dest: /usr/share/pam-configs/mkhomedir
    mode: "0644"
    owner: root
    group: root
  notify:
    - update pam
  when:
    - ansible_os_family == 'Debian'

- name: Join domain with adcli
  ansible.builtin.command: "adcli join -U {{ sssd_ad_user }} --stdin-password {{ sssd_ad_adcli_options }} -D {{ sssd_ad_domain }}"
  args:
    stdin: "{{ sssd_ad_password }}"
    creates: /etc/krb5.keytab
  notify:
    - restart sssd

- name: Enable sssd
  ansible.builtin.service:
    name: sssd
    state: started
    enabled: true

- name: Enable oddjobd
  ansible.builtin.service:
    name: oddjobd
    state: started
    enabled: true

- name: Configure sudo
  ansible.builtin.import_tasks: sudo.yml
  when: sssd_ad_sudo_group is defined
